# coding: utf-8

# EASY

# Задача-1:
# Напишите скрипт, создающий директории dir_1 - dir_9 в папке,
# из которой запущен данный скрипт.
# И второй скрипт, удаляющий эти папки.
import os
import sys

# path = os.path.join('dir_')
#
# def create(num):
#      for i in range(num):
#           os.mkdir(path + str(i + 1))
#      print(os.listdir())
#
# def delete(num):
#      for i in range(num):
#           os.rmdir(path + str(i + 1))
#      print(os.listdir())
#
# create(9)
#
# delete(9)


# Задача-2:
# Напишите скрипт, отображающий папки текущей директории.

# lst = os.listdir()
# dirs = []
#
# for i in lst:
#      if '.' not in str(i):
#           dirs.append(i)
# print(dirs)


# Задача-3:
# Напишите скрипт, создающий копию файла, из которого запущен данный скрипт.

# filename = os.path.basename(__file__)
# path = os.path.join(os.getcwd(), '')
#
# with open(path + filename , 'r', encoding='UTF-8') as r:
#      with open(path + 'copy_' + filename, 'w', encoding='UTF-8') as n:
#           for i in r.readlines():
#                n.writelines(i)



# NORMAL

# Задача-1:
# Напишите небольшую консольную утилиту,
# позволяющую работать с папками текущей директории.
# Утилита должна иметь меню выбора действия, в котором будут пункты:
# 1. Перейти в папку
# 2. Просмотреть содержимое текущей папки
# 3. Удалить папку
# 4. Создать папку
# При выборе пунктов 1, 3, 4 программа запрашивает название папки
# и выводит результат действия: "Успешно создано/удалено/перешел",
# "Невозможно создать/удалить/перейти"
# Для решения данной задачи используйте алгоритмы из задания easy,
# оформленные в виде соответствующих функций,
# и импортированные в данный файл из easy.py



# HARD

# Задание-1:
# Доработайте реализацию программы из примера examples/5_with_args.py,
# добавив реализацию следующих команд (переданных в качестве аргументов):
# cp <file_name> - создает копию указанного файла
# rm <file_name> - удаляет указанный файл (запросить подтверждение операции)
# ls - отображение полного пути текущей директории
# путь считать абсолютным (full_path) -
# в Linux начинается с /, в Windows с имени диска,
# все остальные пути считать относительными.
# Важно! Все операции должны выполняться в той директории, в который вы находитесь.
# Исходной директорией считать ту, в которой был запущен скрипт.
# P.S. По возможности, сделайте кросс-платформенную реализацию.
